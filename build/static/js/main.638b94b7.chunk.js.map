{"version":3,"sources":["App/variables.js","App/helpers.js","WeatherWidget/WeatherWidget.js","WeatherWidget/helpers.js","ImagesCity/ImagesCity.js","App/App.js","index.js"],"names":["codeOpenweathermap","codeUnsplash","fetchWeather","city","a","fetch","then","res","json","fetchPictureCity","weather","toogleTheme","event","theme","target","textContent","document","querySelector","classList","toggle","toogleList","design","WeatherWidget","props","state","valueCity","nextProps","name","this","setState","className","src","icon","alt","temp","main","Math","floor","React","Component","ImagesCity","pictures","id","map","el","urls","small","App","watchWeather","value","cod","results","requestPictures","filterImages","filterConfig","dataset","filter","remove","add","width","height","onClick","type","data-filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.638b94b7.chunk.js","sourcesContent":["export const codeOpenweathermap = 'e93da1268f6107847e8e343567ca21a2';\nexport const codeUnsplash = 'OqA15IgvA2dJfjZ91Ivs-MoPn9LwvH7Op3EUU1tBflo';\n","import { codeUnsplash, codeOpenweathermap } from './variables';\n\n\nexport async function fetchWeather(city) {\n    return await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${codeOpenweathermap}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport async function fetchPictureCity(city, weather) {\n    return await fetch(`https://api.unsplash.com/search/photos?page=1&query=${city}-${weather}&client_id=${codeUnsplash}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport function toogleTheme(event) {\n    const theme = event.target.textContent === \"светлая\" ? \"темная\" : \"светлая\";\n    event.target.textContent = theme;\n    document.querySelector(\"body\").classList.toggle(\"dark-theme\");\n  }\n\nexport function toogleList(event) {\n    const design = event.target.textContent === \"плитку\" ? \"список\" : \"плитку\";\n    event.target.textContent = design;\n    document.querySelector(\".images-city\").classList.toggle(\"two-columns\");\n  }\n  \n  ","import React from 'react';\nimport { calcTemperature } from './helpers';\n\nexport default class WeatherWidget extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { valueCity: props.valueCity };\n    }\n  \n    shouldComponentUpdate(nextProps) {\n      if (nextProps.valueCity.name !== this.state.valueCity.name) {\n        this.setState({ valueCity: nextProps.valueCity });\n        return true;\n      }\n      return false;\n    }\n  \n    render() {\n      return (\n        <div className=\"weather\">\n          <div>{this.state.valueCity.name}</div>\n          <div><img src={`http://openweathermap.org/img/w/${this.state.valueCity.weather[0].icon}.png`} alt=\"\" /></div>\n          <div>{calcTemperature(this.state.valueCity.main.temp)} {\"\\u2103\"}</div>\n        </div>\n      )\n    }\n  }\n  ","export function calcTemperature(temp) {\n    return Math.floor(temp - 273.15);\n  }","import React from 'react';\n\nexport default class ImagesCity extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { pictures: props.pictures };\n    }\n  \n    shouldComponentUpdate(nextProps) {\n      if (nextProps.pictures[0].id !== this.state.pictures[0].id) {\n        this.setState({ pictures: nextProps.pictures });\n        return true;\n      }\n      return false;\n    }\n  \n    render() {\n      return (\n        <div className=\"images-city\">\n            {this.state.pictures.map((el) => {\n            return (\n            <div className=\"image\" key={el.id}>\n                <img src={el.urls.small} alt=\"\" />\n        </div>\n    )\n  })}\n</div>\n      )\n    }\n  }\n  ","import React from 'react';\nimport './App.css';\nimport { fetchWeather, fetchPictureCity, toogleTheme, toogleList } from './helpers';\nimport WeatherWidget from './../WeatherWidget/WeatherWidget';\nimport ImagesCity from './../ImagesCity/ImagesCity';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCity: null, pictures: null, requestPictures: null\n    };\n  }\n\n   watchWeather = async () => {\n    const city = document.querySelector('#input-city').value\n    if (!city) return;\n\n    const valueCity = await fetchWeather(city);\n    if (valueCity.cod == 404) return;\n    const pictures = await fetchPictureCity(valueCity.name, valueCity.weather[0].main);\n    \n    this.setState({ \n      pictures: pictures.results, \n      requestPictures:  pictures.results, \n      valueCity \n    })\n  }\n\n  filterImages = event => {\n    const el = event.target;\n    const filterConfig = el.dataset.filter;\n    if (filterConfig) {\n      document.querySelector(\".choice\").classList.remove(\"choice\");\n      el.classList.add(\"choice\");\n      this.setState({ pictures: this.state.requestPictures.filter((el) => {\n            if (filterConfig === \"width\") return el.width > el.height;\n            else if (filterConfig === \"height\") return el.width < el.height;\n            return true;\n          }) \n        })\n    }\n  }\n  \n  \nrender() {\n  return (\n      <div className=\"App\">\n        <div className=\"change-theme\">Сменить тему: <span onClick={toogleTheme}>темная</span></div>\n        <div className=\"form-group\">\n            <input type=\"text\" name=\"user_name\" id=\"input-city\"/>\n            <button onClick={this.watchWeather}>Посмотреть погоду</button>\n        </div>\n        { !!this.state.valueCity &&  <WeatherWidget valueCity={this.state.valueCity} /> }\n        { !!this.state.pictures &&  \n            <div className=\"images-block\">\n              <div className=\"filter-group\">\n                <div className=\"filter\" onClick={this.filterImages}>\n                    Фильтр по фото:&nbsp;\n                    <span className=\"choice\" data-filter=\"all\">Все&nbsp;</span>\n                    <span data-filter=\"width\">Горизонтальные&nbsp;</span> \n                    <span data-filter=\"height\">Вертикальные</span>\n                </div>\n                <div className=\"filter\">\n                  Переключить дизайн на: <span onClick={toogleList}>список</span>\n                </div>\n              </div>\n              <ImagesCity pictures={this.state.pictures} />\n            </div> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}