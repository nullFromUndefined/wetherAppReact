{"version":3,"sources":["App/variables.js","App/helpers.js","WeatherWidget/WeatherWidget.js","WeatherWidget/helpers.js","ImagesCity/ImagesCity.js","App/App.js","index.js"],"names":["codeOpenweathermap","codeUnsplash","fetchWeather","city","a","fetch","then","res","json","fetchPictureCity","weather","toogleTheme","event","theme","target","textContent","document","querySelector","classList","toggle","toogleList","design","WeatherWidget","props","state","valueCity","this","name","setState","className","src","icon","alt","temp","main","Math","floor","React","Component","ImagesCity","pictures","nextProps","id","map","el","urls","small","App","watchWeather","value","results","requestPictures","filterImages","filterConfig","dataset","filter","remove","add","width","height","onClick","type","data-filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.963c9349.chunk.js","sourcesContent":["export const codeOpenweathermap = 'e93da1268f6107847e8e343567ca21a2';\nexport const codeUnsplash = 'OqA15IgvA2dJfjZ91Ivs-MoPn9LwvH7Op3EUU1tBflo';\n","import { codeUnsplash, codeOpenweathermap } from './variables';\n\n\nexport async function fetchWeather(city) {\n    return await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${codeOpenweathermap}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport async function fetchPictureCity(city, weather) {\n    return await fetch(`https://api.unsplash.com/search/photos?page=1&query=${city}-${weather}&client_id=${codeUnsplash}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport function toogleTheme(event) {\n    const theme = event.target.textContent === \"светлая\" ? \"темная\" : \"светлая\";\n    event.target.textContent = theme;\n    document.querySelector(\"body\").classList.toggle(\"dark-theme\");\n  }\n  \nexport function toogleList(event) {\n    const design = event.target.textContent === \"плитку\" ? \"список\" : \"плитку\";\n    event.target.textContent = design;\n    document.querySelector(\".images-city\").classList.toggle(\"two-columns\");\n  }\n  \n  ","import React from 'react';\nimport { calcTemperature } from './helpers';\n\nexport default class WeatherWidget extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = props.valueCity;\n    }\n  \n    shouldComponentUpdate() {\n      if (this.props.valueCity.name !== this.state.name) {\n        this.setState({ ...this.props.valueCity });\n        return true;\n      }\n      return false;\n    }\n  \n    render() {\n      return (\n        <div className=\"weather\">\n          <div>{this.state.name}</div>\n          <div><img src={`http://openweathermap.org/img/w/${this.state.weather[0].icon}.png`} alt=\"\" /></div>\n          <div>{calcTemperature(this.state.main.temp)} {\"\\u2103\"}</div>\n        </div>\n      )\n    }\n  }\n  ","export function calcTemperature(temp) {\n    return Math.floor(temp - 273.15);\n  }","import React from 'react';\n\nexport default class ImagesCity extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { pictures: props.pictures };\n    }\n  \n    shouldComponentUpdate(nextProps) {\n      if (nextProps.pictures[0].id !== this.state.pictures[0].id) {\n        this.setState({ pictures: nextProps.pictures });\n        return true;\n      }\n      return false;\n    }\n  \n    render() {\n      return (\n        <div className=\"images-city\">\n            {this.state.pictures.map((el) => {\n            return (\n            <div className=\"image\" key={el.id}>\n                <img src={el.urls.small} alt=\"\" />\n        </div>\n    )\n  })}\n</div>\n      )\n    }\n  }\n  ","import React from 'react';\nimport './App.css';\nimport { fetchWeather, fetchPictureCity, toogleTheme, toogleList } from './helpers';\nimport WeatherWidget from './../WeatherWidget/WeatherWidget';\nimport ImagesCity from './../ImagesCity/ImagesCity';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCity: null, pictures: null, requestPictures: null\n    };\n  }\n\n   watchWeather = async () => {\n    const city = document.querySelector('#input-city').value\n    if (!city) return;\n\n    const valueCity = await fetchWeather(city);\n    this.setState({ valueCity });\n    const pictures = await fetchPictureCity(this.state.valueCity.name, this.state.valueCity.weather[0].main)\n    \n    this.setState({ pictures: pictures.results, requestPictures:  pictures.results})\n  }\n\n  filterImages = (event) => {\n    const el = event.target;\n    const filterConfig = el.dataset.filter;\n    document.querySelector(\".choice\").classList.remove(\"choice\");\n    el.classList.add(\"choice\");\n  \n    this.setState({ pictures: this.state.requestPictures.filter((el) => {\n          if (filterConfig === \"width\") return el.width > el.height;\n          else if (filterConfig === \"height\") return el.width < el.height;\n          return true;\n        }) \n      })\n  }\n  \n  \nrender() {\n  return (\n      <div className=\"App\">\n        <div className=\"change-theme\">Сменить тему: <span onClick={toogleTheme}>темная</span></div>\n        <div className=\"form-group\">\n            <input type=\"text\" name=\"user_name\" id=\"input-city\"/>\n            <button onClick={this.watchWeather}>Посмотреть погоду</button>\n        </div>\n        { !!this.state.valueCity &&  <WeatherWidget valueCity={this.state.valueCity} /> }\n        { !!this.state.pictures &&  \n            <div className=\"images-block\">\n              <div className=\"filter-group\">\n                <div className=\"filter\" onClick={this.filterImages}>\n                    Фильтр по фото:&nbsp;\n                    <span className=\"choice\" data-filter=\"all\">Все&nbsp;</span>\n                    <span data-filter=\"width\">Горизонтальные&nbsp;</span> \n                    <span data-filter=\"height\">Вертикальные</span>\n                </div>\n                <div className=\"filter\" onClick={toogleList}>\n                  Переключить дизайн на: <span>список</span>\n                </div>\n              </div>\n              <ImagesCity pictures={this.state.pictures} />\n      </div> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}