{"version":3,"sources":["App/variables.js","App/helpers.js","App/App.js","index.js"],"names":["codeOpenweathermap","codeUnsplash","fetchWeather","city","a","fetch","then","res","json","fetchPictureCity","weather","toogleTheme","event","theme","target","textContent","document","querySelector","classList","toggle","toogleList","design","App","props","watchWeather","value","valueCity","setState","state","name","main","pictures","results","requestPictures","filterImages","el","filterConfig","dataset","filter","remove","add","width","height","className","class","onClick","type","id","this","src","icon","alt","temp","Math","floor","data-filter","map","urls","small","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69637744.chunk.js","sourcesContent":["export const codeOpenweathermap = 'e93da1268f6107847e8e343567ca21a2';\nexport const codeUnsplash = 'OqA15IgvA2dJfjZ91Ivs-MoPn9LwvH7Op3EUU1tBflo';\n","import { codeUnsplash, codeOpenweathermap } from './variables';\n\n\nexport async function fetchWeather(city) {\n    return await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${codeOpenweathermap}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport async function fetchPictureCity(city, weather) {\n    return await fetch(`https://api.unsplash.com/search/photos?page=1&query=${city}-${weather}&client_id=${codeUnsplash}`)\n      .then(res => {\n        return res.json();\n      })\n  }\n  \nexport function toogleTheme(event) {\n    const theme = event.target.textContent === \"светлая\" ? \"темная\" : \"светлая\";\n    event.target.textContent = theme;\n    document.querySelector(\"body\").classList.toggle(\"dark-theme\");\n  }\n  \nexport function toogleList(event) {\n    const design = event.target.textContent === \"плитку\" ? \"список\" : \"плитку\";\n    event.target.textContent = design;\n    document.querySelector(\".images-city\").classList.toggle(\"two-columns\");\n  }\n\n  export function calcTemperature(temp) {\n    return Math.floor(temp - 273.15);\n  }\n  ","import React from 'react';\nimport './App.css';\nimport { fetchWeather, fetchPictureCity, toogleTheme, toogleList, calcTemperature } from './helpers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCity: null, pictures: null, requestPictures: null\n    };\n  }\n\n   watchWeather = async () => {\n    const city = document.querySelector('#input-city').value\n    if (!city) return;\n\n    const valueCity = await fetchWeather(city);\n    this.setState({ valueCity })\n    const pictures = await fetchPictureCity(this.state.valueCity.name, this.state.valueCity.weather[0].main)\n    \n    this.setState({ pictures: pictures.results, requestPictures:  pictures.results})\n  }\n\n  filterImages = (event) => {\n    const el = event.target;\n    const filterConfig = el.dataset.filter;\n    document.querySelector(\".choice\").classList.remove(\"choice\");\n    el.classList.add(\"choice\");\n  \n    this.setState({ pictures: this.state.requestPictures.filter((el) => {\n          if (filterConfig === \"width\") return el.width > el.height;\n          else if (filterConfig === \"height\") return el.width < el.height;\n          return true;\n        }) \n      })\n  }\n  \n  \nrender() {\n  return (\n      <div className=\"App\">\n        <div class=\"change-theme\">Сменить тему: <span onClick={toogleTheme}>темная</span></div>\n        <div className=\"form-group\">\n            <input type=\"text\" name=\"user_name\" id=\"input-city\"/>\n            <button onClick={this.watchWeather}>Посмотреть погоду</button>\n        </div>\n        { !!this.state.valueCity &&\n            <div className=\"weather\">\n              <div>{this.state.valueCity.name}</div>\n              <div><img src={`http://openweathermap.org/img/w/${this.state.valueCity.weather[0].icon}.png`} alt=\"\" /></div>\n              <div>{calcTemperature(this.state.valueCity.main.temp)} {\"\\u2103\"}</div>\n            </div>\n        }\n        { !!this.state.pictures &&  \n            <div className=\"images-block\">\n              <div className=\"filter-group\">\n                <div className=\"filter\" onClick={this.filterImages}>\n                    Фильтр по фото:&nbsp;\n                    <span className=\"choice\" data-filter=\"all\">Все&nbsp;</span>\n                    <span data-filter=\"width\">Горизонтальные&nbsp;</span> \n                    <span data-filter=\"height\">Вертикальные</span>\n                </div>\n                <div className=\"filter\" onClick={toogleList}>\n                  Переключить дизайн на: <span>список</span>\n                </div>\n              </div>\n              \n              <div className=\"images-city\">\n                {this.state.pictures.map((el) => {\n                  return (\n                  <div className=\"image\" key={el.id}>\n                    <img src={el.urls.small} alt=\"\" />\n              </div>\n            )\n          })}\n        </div>\n      </div> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}